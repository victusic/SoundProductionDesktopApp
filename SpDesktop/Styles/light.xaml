<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="GridBase" TargetType="Grid">
        <Setter Property="Background" Value="#FF000000"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
    </Style>
    <Style x:Key="Grid1" TargetType="Grid">
        <Setter Property="Background" Value="#FFE8E7E4"></Setter>
        <Setter Property="Width" Value="400"></Setter>
        <Setter Property="Height" Value="200"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>
    <Style x:Key="Grid1Hide" TargetType="Grid">
        <Setter Property="Background" Value="#FFF7F6F3"></Setter>
        <Setter Property="Width" Value="90"></Setter>
        <Setter Property="Height" Value="200"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>
    <Style x:Key="Grid2" TargetType="Grid">
        <Setter Property="Background" Value="#FFEAE4F2"></Setter>
        <Setter Property="Height" Value="200"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="90,0,0,0"></Setter>
    </Style>

    <Style x:Key="Grid3" TargetType="Grid">
        <Setter Property="Background" Value="#FFF7F6F3"></Setter>
        <Setter Property="Width" Value="90"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="0,200,0,0"></Setter>
    </Style>
    <Style x:Key="Grid3Plus" TargetType="Grid">
        <Setter Property="Background" Value="#FFF7F6F3"></Setter>
        <Setter Property="Width" Value="400"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="0,200,0,0"></Setter>
    </Style>
    <Style x:Key="Grid4" TargetType="Grid">
        <Setter Property="Background" Value="#FFFFFFFF"></Setter>
        <Setter Property="Margin" Value="90,200,0,0"></Setter>
    </Style>
    <Style x:Key="Ffont" TargetType="Label">
        <Setter Property="Foreground" Value="#FF37352F"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
    </Style>
    <Style x:Key="Sfont" TargetType="Label">
        <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
    </Style>
    <Style x:Key="PurpleLine" TargetType="Ellipse">
        <Setter Property="Stroke" Value="#FFEAE4F2"></Setter>
        <Setter Property="StrokeThickness" Value="3"></Setter>
    </Style>
    <Style x:Key="YellowLine" TargetType="Ellipse">
        <Setter Property="Stroke" Value="#FFFBF3DB"></Setter>
        <Setter Property="StrokeThickness" Value="3"></Setter>
    </Style>
    <Style x:Key="PinkLine" TargetType="Ellipse">
        <Setter Property="Stroke" Value="#FFF4DFEB"></Setter>
        <Setter Property="StrokeThickness" Value="3"></Setter>
    </Style>
    <SolidColorBrush Color="#FFFFFFFF" x:Key="RoundBack" />
    <Style x:Key="AuthButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#F7F6F3"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFEAE4F2"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Inputs" TargetType="TextBox">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#FFFFFFFF"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="BorderBrush" Value="#FFEAE4F2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#DDEDEA"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFEAE4F2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Passwords" TargetType="PasswordBox">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#FFFFFFFF"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="BorderBrush" Value="#FFEAE4F2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#DDEDEA"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFEAE4F2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#F7F6F3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFEAE4F2"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Eye" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
    </Style>
    <Style x:Key="PfotoPlace" TargetType="Grid">
        <Setter Property="Background" Value="#FFA1A09C"></Setter>
    </Style>
    <Style x:Key="PanlButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
    </Style>
    <Style x:Key="PanlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
    </Style>
    <Style x:Key="ToolsIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#3FA1A09C"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#00000000"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#00000000"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolsIconS" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#FFA1A09C"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF37352F"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolsIconNo" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#3FA1A09C"></Setter>
    </Style>
    <Style x:Key="ExitButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#F7F6F3"></Setter>
        <Setter Property="Foreground" Value="#37352F"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFEAE4F2"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FfontBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF37352F"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
    </Style>
    <Style x:Key="SfontBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
    </Style>
    <Style x:Key="FfontBlockP" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF37352F"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#EAE4F2"></Setter>
    </Style>
    <Style x:Key="FfontBlock2" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF37352F"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#EAE4F2"></Setter>
        <Setter Property="FontSize" Value="28"></Setter>
    </Style>
    <Style x:Key="SfontBlock2" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#F7F6F3"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>








    <!-- DATA Grig-->








    <sys:Double x:Key="DataGridRow.Height">33</sys:Double>

    <Thickness x:Key="DataGrid.BorderThickness" Bottom="1" Left="1" Right="1" Top="1" />
    <Thickness x:Key="ColumnHeader.BorderThickness" Bottom="0" Left="0" Right="1" Top="0" />
    <Thickness x:Key="DataGridRow.BorderThickness" Bottom="0" Left="0" Right="0" Top="1" />

    <SolidColorBrush x:Key="DataGrid.BorderBrush" Color="#30A1A09C" />
    <SolidColorBrush x:Key="ColumnHeader.Background" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ColumnHeader.BorderBrush" Color="#30A1A09C" />
    <SolidColorBrush x:Key="DataGridRow.BorderBrush" Color="#30A1A09C" />
    <SolidColorBrush x:Key="DataGridRow.Normal.Background" Color="#FFFFFF" />
    <SolidColorBrush x:Key="DataGridRow.Normal.Foreground" Color="Purple" />
    <SolidColorBrush x:Key="DataGridRow.MouseOver.Background" Color="#99FBF3DB" />
    <SolidColorBrush x:Key="DataGridRow.MouseOver.Foreground" Color="#A1A09C" />
    <SolidColorBrush x:Key="DataGridRow.Selected.Background" Color="#EAE4F2" />
    <SolidColorBrush x:Key="DataGridRow.Selected.Foreground" Color="DarkCyan" />

    <Style TargetType="DataGrid">
        <!--    Цвет линии сетки  -->
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="BorderThickness" Value="{StaticResource DataGrid.BorderThickness}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Background" Value="{StaticResource ColumnHeader.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGrid.BorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="#00E9ECF1" />
        <Setter Property="VerticalGridLinesBrush" Value="#00E9ECF1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="{StaticResource DataGridRow.Height}" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="#37352F" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" Width="Auto" Margin="-1,0"
                            BorderBrush="{StaticResource ColumnHeader.BorderBrush}"
                            BorderThickness="{StaticResource ColumnHeader.BorderThickness}"
                            SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <ContentPresenter Margin="5,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource DataGridRow.Normal.Background}" />
        <Setter Property="Foreground" Value="{StaticResource DataGridRow.MouseOver.Foreground}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource DataGridRow.BorderThickness}" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridRow.BorderBrush}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="0,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Margin="0,0,0,-1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="{StaticResource DataGridRow.Height}" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1" Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                                     ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                     Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility,
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource DataGridRow.MouseOver.Foreground}" />
                            <Setter Property="Background" Value="{StaticResource DataGridRow.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource DataGridRow.Selected.Foreground}" />
                            <Setter Property="Background" Value="{StaticResource DataGridRow.Selected.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#37352F" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Скрол бар-->



    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="Transparent" Points="3,15 15,15 9,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="Transparent" Points="3,3 9,15 15,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="#E8E7E4" Margin="2"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="1"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="1"/>
            </Grid.RowDefinitions>

            <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>




    <!--List View-->

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                           Background="#F7F6F3" Padding="10 0 0 0" SnapsToDevicePixels="true">
                        <ContentPresenter ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#EAE4F2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="#E8E7E4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewB" TargetType="ListView">
        <Setter Property="Background" Value="#FFFFFF"></Setter>
    </Style>

    <Style x:Key="BorderB" TargetType="Border">
        <Setter Property="Background" Value="#FFFFFF"></Setter>
    </Style>

    <Style x:Key="DGridButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#FFFFFF"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F7F6F3"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DGridButtonX" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Background" Value="#FFFFFF"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F7F6F3"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>










    <SolidColorBrush x:Key="BorderBrushComboBox" Color="#444" />

    <LinearGradientBrush x:Key="BackgroundBrushComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#4c4c4c" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundBrushPopUpComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="1"/>
        <GradientStop Color="#4c4c4c" Offset="0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ArrowBrushComboBox" Color="#ddd" />

    <SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="#FF919191" />

    <LinearGradientBrush x:Key="DisabledBackgroundComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundComboBox" Color="#aaaaaa" />

    <SolidColorBrush x:Key="HoverBorderBrush" Color="#aaa" />

    <LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverToggleBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#676767" Offset="0"></GradientStop>
        <GradientStop Color="#474747" Offset="1"></GradientStop>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverItemComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#999" Offset="0"></GradientStop>
        <GradientStop Color="#666" Offset="1"></GradientStop>
    </LinearGradientBrush>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" Background="#F7F6F3" 
                    BorderThickness="0" />
            <Border x:Name="BorderToggle" Grid.Column="0" Background="#F7F6F3"
                     Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="#37352F" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E8E7E4" />
                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="yellow" />
                <Setter TargetName="BorderToggle" Property="Background" Value="green" />
                <Setter TargetName="Border" Property="BorderBrush" Value="blue" />
                <Setter Property="Foreground" Value="orange"/>
                <Setter TargetName="Arrow" Property="Fill" Value="black" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="brown" />
    </ControlTemplate>









    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="#ddd"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="red" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#F7F6F3" BorderThickness="0" Margin="0,3,0,3"/>
                                <!--***Scroll***-->
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="brown"/>
                            <Setter Property="Background" Value="pink"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#EAE4F2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Foreground" Value="#A1A09C"></Setter>
        <Setter Property="Background" Value="#F7F6F3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FFEAE4F2"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E8E7E4"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsButton" TargetType="Button">
        <Setter Property="TextElement.FontFamily" Value="../Font/#Sochi2014 Light (OpenType)"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"  x:Name="Border">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding  Content}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>